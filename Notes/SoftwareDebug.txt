1. CPU基础
分段与分页：
    1. 查看 GDT / IDT 内容
        0: kd> r gdtr
        gdtr=8003f000
        0: kd> r gdtl
        gdtl=000003ff
        0: kd> r idtl
        idtl=000007ff
        0: kd> r idtr
        idtr=8003f400
        GDT 高四字节， 3ff，表明GDT表大小为1024字节，即 1024/8 = 128个表项。
        
        0: kd> dg 23            // 查看一个段描述子的内容，Windbg可以分析
                                          P Si Gr Pr Lo
        Sel    Base     Limit     Type    l ze an es ng Flags
        ---- -------- -------- ---------- - -- -- -- -- --------
        0023 00000000 ffffffff Data RW Ac 3 Bg Pg P  Nl 00000cf3    
        
    .formats 命令，以多种形式显示一个数字
        0: kd> .formats 898a8670  
        Evaluate expression:
          Hex:     898a8670
          Decimal: -1987410320
          Octal:   21142503160
          Binary:  10001001 10001010 10000110 01110000
          Chars:   ...p
          Time:    ***** Invalid
          Float:   low -3.33487e-033 high -1.#QNAN
          Double:  -1.#QNAN    
    
    2. 分页机制中的虚拟地址向物理地址映射过程：
        在计算器calc.exe（XP系统）上输入一个数字 123456789，然后使用Windbg查看 calc!gpszNum 变量的值，即为该字符串。
        calc!gpszNum的值为 0x000b4148
    下面将该值，做地址翻译：
    !process 0 0  列举出当前系统中的所有进程
    PROCESS 898a8670  SessionId: 0  Cid: 0d34    Peb: 7ffd4000  ParentCid: 0694
        DirBase: 0a3c0300  ObjectTable: e105a558  HandleCount:  49.
        Image: calc.exe    
    
            PROCESS 898a8670            进程 PROCESS结构体基地址
            SessionId: 0                SessionID （需了解）
            Cid: 0d34                   进程ID
            Peb: 7ffd4000               进程的PEB
            ParentCid: 0694             父进程ID
            DirBase: 0a3c0300           Dir Base是页目录表基地址，页目录表中为页目录项，页目录项指向页表，页表项指向一个内存页基地址
            ObjectTable: e105a558       句柄表地址
            HandleCount:  49.           句柄数目，句柄表中句柄数
            Image: calc.exe             映像名称
    
    DirBase为页目录表的基地址，用!dd 命令可以查看内容：
        0: kd> !dd 0a3c0300  
        # a3c0300 54e1f801 00000000 55020801 00000000
        # a3c0310 550a1801 00000000 54c9e801 00000000
        # a3c0320 25822801 00000000 25723801 00000000
        # a3c0330 25964801 00000000 25961801 00000000    
        
    在X64机器的虚拟机XP系统，可以发现在64位机器上，该页目录表的每一项是64位的（不影响分析）。
    先看一下一个线性地址的分配： 0x000b4148
        31 --- 22 21 ----- 12 11 ------ 0
           Dir       Table       Offset
           00         b4           148
           
    计算器的页目录表基地址，物理地址 ： 00000000`54e1f801
    页目录表基址为 高二十位为基地址：即0x54e1f000       
    0: kd> !dq 0x54e1f000
    #54e1f000 00000000`5532e867 00000000`55483867
    #54e1f010 00000000`54b59867 00000000`00000000        
    页目录表的地址：00000000`5532e867
    同样，高二十位为页表的基地址：0x5532e000
        那么页表项就可以取得了： 0x5532e000 + b4*8         
    0: kd> !dq 5532e000 + b4* 8
    #5532e5a0 80000000`5523a867 80000000`553bb867
    #5532e5b0 80000000`554fd867 80000000`553bc867  
    
    页基址就得到了，80000000`5523a867，同样是取高二十位，低位补0，得到 0x5523a000
    0: kd> !du 5523a000 + 148
    #5523a148 "123456789."    
    
    3. Windbg命令：
        !pte    显示页目录和页表的地址
        !vtop   虚拟地址翻译为物理地址
        !vpdd   显示虚拟地址，物理地址，和内存的内容
        !ptov   显示指定进程中所有物理内存到虚拟内存的映射
        !sysptes 显示系统的页目录表项

2. 断点和中断

3.         